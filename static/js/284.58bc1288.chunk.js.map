{"version":3,"file":"static/js/284.58bc1288.chunk.js","mappings":"8QAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2BAIzBC,EAAQJ,EAAAA,GAAAA,GAASK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kCAIjBG,EAAQN,EAAAA,GAAAA,MAAYO,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+EAMpBK,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAmBU,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8BAI3BQ,GAAeX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAA0Ba,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6CAE3C,SAAAW,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAGvBC,EAASlB,EAAAA,GAAAA,OAAamB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,2TAGb,SAAAW,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,IAAI,IAGnC,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,MAAM,IAIb,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,MAAM,IACrC,SAAAP,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,KAAK,IAEd,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,OAAOI,IAAI,I,SC7B1CG,EAAcC,EAAAA,GAAW,CAC7BC,MAAOD,EAAAA,KAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,EAAAA,KACPI,IAAI,EAAG,6CACPC,QAAQ,WAAY,mDACpBH,SAAS,cAGDI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC/B,EAAK,CAAA8B,SAAC,iBACPC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEZ,MAAO,GAAIE,SAAU,IACtCW,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQC,GACjBV,GAASW,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAET,UAEFD,EAAAA,EAAAA,MAAClC,EAAI,CAAC6C,aAAa,MAAKV,SAAA,EACtBD,EAAAA,EAAAA,MAAC3B,EAAK,CAAA4B,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAAC3B,EAAK,CAACqC,KAAK,QAAQC,KAAK,QAAQC,YAAY,oBAC7CZ,EAAAA,EAAAA,KAACxB,EAAY,CAACmC,KAAK,QAAQE,UAAU,aAEvCf,EAAAA,EAAAA,MAAC3B,EAAK,CAAA4B,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAAC3B,EAAK,CAACqC,KAAK,WAAWC,KAAK,WAAWC,YAAY,cACnDZ,EAAAA,EAAAA,KAACxB,EAAY,CAACmC,KAAK,WAAWE,UAAU,aAE1Cb,EAAAA,EAAAA,KAACjB,EAAM,CAAC2B,KAAK,SAAQX,SAAC,iBAI1BD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,uCAEDC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,GAAG,YAAWhB,SAAC,mBAI7B,EC9CA,EATc,WACZ,OACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAACL,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Field as FormikField,\n  Form as FormikForm,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  width: 320px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Field = styled(FormikField)`\n  font-size: 16px;\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  font-size: 14px;\n  color: ${p => p.theme.colors.error};\n`;\n\nexport const Button = styled.button`\n  font-size: 14px;\n  border-radius: 2px;\n  border: 1px solid ${p => p.theme.colors.gray};\n  text-transform: uppercase;\n  font-weight: 700;\n  color: ${p => p.theme.colors.orange};\n  margin-bottom: 30px;\n\n  :hover {\n    background-color: ${p => p.theme.colors.orange};\n    color: ${p => p.theme.colors.white};\n    box-shadow: 0px 2px 10px 2px rgba(0, 0, 0, 0.1);\n    border: 1px solid ${p => p.theme.colors.gray};\n  }\n`;\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from 'redux/auth/authOperations';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Label,\n  ErrorMessage,\n  Field,\n  Button,\n  Title,\n} from './LoginForm.styled';\n\nconst LogInScheme = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Password must contain 8 characters as min')\n    .matches(/[a-zA-Z]/, 'Password must contain at least one Latin letter')\n    .required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Title>Log In form</Title>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={LogInScheme}\n        onSubmit={(values, actions) => {\n          dispatch(register(values));\n          actions.resetForm();\n        }}\n      >\n        <Form autoComplete=\"off\">\n          <Label>\n            Email\n            <Field type=\"email\" name=\"email\" placeholder=\"john@gmail.com\" />\n            <ErrorMessage name=\"email\" component=\"span\" />\n          </Label>\n          <Label>\n            Password\n            <Field type=\"password\" name=\"password\" placeholder=\"********\" />\n            <ErrorMessage name=\"password\" component=\"span\" />\n          </Label>\n          <Button type=\"submit\">Log In</Button>\n        </Form>\n      </Formik>\n\n      <p>\n        Is it your first time here? Please,\n        <Link to=\"/register\">Register!</Link>\n      </p>\n    </div>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Label","_templateObject3","Field","FormikField","_templateObject4","ErrorMessage","FormikErrorMessage","_templateObject5","p","theme","colors","error","Button","_templateObject6","gray","orange","white","LogInScheme","Yup","email","required","password","min","matches","LoginForm","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","autoComplete","type","name","placeholder","component","Link","to"],"sourceRoot":""}