{"version":3,"file":"static/js/236.0b5c1847.chunk.js","mappings":"yPAMMA,EAAqBC,EAAAA,GAAW,CACpCC,KAAMD,EAAAA,KACHE,IAAI,EAAG,2CACPC,IAAI,GAAI,4CACRC,SAAS,YACZC,MAAOL,EAAAA,KAAaK,MAAM,yBAAyBD,SAAS,YAC5DE,SAAUN,EAAAA,KACPE,IAAI,EAAG,6CACPK,QAAQ,WAAY,mDACpBH,SAAS,cAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CAAEd,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDU,iBAAkBjB,EAClBkB,SAAU,SAACC,EAAQC,GACjBV,GAASW,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAET,UAEFD,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,aAAa,MAAKX,SAAA,EACtBD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CAACC,KAAK,OAAOxB,KAAK,OAAOyB,YAAY,UAC3Cb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAAC1B,KAAK,OAAO2B,UAAU,aAEtCjB,EAAAA,EAAAA,MAAA,SAAAC,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CAACC,KAAK,QAAQxB,KAAK,QAAQyB,YAAY,oBAC7Cb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAAC1B,KAAK,QAAQ2B,UAAU,aAEvCjB,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CAACC,KAAK,WAAWxB,KAAK,WAAWyB,YAAY,cACnDb,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CAAC1B,KAAK,WAAW2B,UAAU,aAE1Cf,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAAQb,SAAC,mBAI1BD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,mCAC8BC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,SAAQlB,SAAC,iBAIzD,EC7CA,EATiB,WACf,OACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAACL,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { register } from 'redux/auth/authOperations';\nimport * as Yup from 'yup';\n\nconst RegistrationScheme = Yup.object({\n  name: Yup.string()\n    .min(3, 'Name should contain 3 characters as min')\n    .max(10, 'Name should contain 10 characters as max')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Password must contain 8 characters as min')\n    .matches(/[a-zA-Z]/, 'Password must contain at least one Latin letter')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h2>Registration form</h2>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={RegistrationScheme}\n        onSubmit={(values, actions) => {\n          dispatch(register(values));\n          actions.resetForm();\n        }}\n      >\n        <Form autoComplete=\"off\">\n          <label>\n            Username\n            <Field type=\"text\" name=\"name\" placeholder=\"John\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </label>\n          <label>\n            Email\n            <Field type=\"email\" name=\"email\" placeholder=\"john@gmail.com\" />\n            <ErrorMessage name=\"email\" component=\"span\" />\n          </label>\n          <label>\n            <Field type=\"password\" name=\"password\" placeholder=\"********\" />\n            <ErrorMessage name=\"password\" component=\"span\" />\n          </label>\n          <button type=\"submit\">Register</button>\n        </Form>\n      </Formik>\n\n      <p>\n        Already have an account? Let's <Link to=\"/login\">Log In!</Link>\n      </p>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["RegistrationScheme","Yup","name","min","max","required","email","password","matches","RegisterForm","dispatch","useDispatch","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","Form","autoComplete","Field","type","placeholder","ErrorMessage","component","Link","to"],"sourceRoot":""}